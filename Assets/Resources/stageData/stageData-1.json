{
    "stageOrder": [
        0,
        2,
        4,
        1,
        6,
        3,
        0,
        2,
        4,
        1,
        6,
        3,
        5,
        0,
        2,
        4,
        1,
        6,
        3,
        0,
        2,
        4,
        1,
        6,
        3,
        5
    ],
    "quizSets": [
        {
            "quizName": "C 언어의 역사와 자료형",
            "questions": [
                "C 언어는 1970년대에 만들어진 프로그래밍 언어이다.",
                "==, !=, <, 등의 관계 연산자는 조건을 만족하면 0, 만족하지 않으면 1을 반환한다.",
                "int는 정수 자료형이다.",
                "C언어는 Windows 운영체제를 위해 만든 언어이다.",
                "char는 실수 자료형이다.",
                "C언어에서는 -1도 true로 간주한다."
            ],
            "answers": [
                "C 언어는 1970년대 만들어진 프로그래밍 언어가 맞습니다.",
                "관계 연산자는 조건을 만족하면 1, 만족하지 않으면 0을 반환합니다.",
                "int는 정수 자료형이 맞습니다.",
                "C언어는 UNIX 운영체제를 위해 만들어진 언어입니다. 지금은 무궁무진하게 사용되지요.",
                "char는 문자 자료형입니다.",
                "C언어에서는 0을 제외한 모든 수를 true로 간주합니다. 신기하죠?"
            ],
            "boolAnswers": [
                true,
                false,
                true,
                false,
                false,
                true
            ]
        },
        {
            "quizName": "변수와 함수",
            "questions": [
                "C 언어에서는 변하지 않는 수를 변수라고 한다.",
                "변수를 선언하고 초기화를 하지 않으면 이상한 값이 들어있을 수도 있다.",
                "초기화는 변수에 초기 데이터를 설정해주는 행위를 말한다.",
                "함수와 변수의 선언 시에 함수의 이름은 소문자, 변수는 대문자로 시작하는 풍습이 있다.",
                "main()도 하나의 함수이다.",
                "하나의 프로그램에서 void main()과 int main()을 따로 선언하여 사용할 수 있다."
            ],
            "answers": [
                "변수란 값을 저장할 수 있는 메모리 공간에 붙은 이름, 혹은 메모리 공간 자체를 의미합니다. 값이 변할 수 있죠.",
                "변수를 선언하고 값을 넣어주지 않으면 쓰레기 값이 들어갑니다.",
                "초기화란 변수에 초기 데이터를 집어넣는 일련의 과정을 뜻합니다.",
                "관례적으로 함수와 변수의 선언 시에 함수 이름은 대문자, 변수 이름은 소문자로 시작하는 풍습이 있습니다.",
                "main()도 시스템이 호출하는 하나의 함수입니다. 정상 작동 여부 또한 돌려주죠.",
                "하나의 프로그램에서 main()함수는 하나만 존재할 수 있습니다."
            ],
            "boolAnswers": [
                false,
                true,
                true,
                false,
                true,
                false
            ]
        },
        {
            "quizName": "조건문과 반복문",
            "questions": [
                "for문을 for( ; ; )으로도 사용할 수 있다.",
                "while 문에서의 탈출을 위해 break문을 사용할 수 있다.",
                "else if문은 최대 3개까지 추가할 수 있다.",
                "else문은 if문 없이 독립적으로 사용할 수 없다.",
                "else if문은 if문이 없으면 사용할 수 없다.",
                "if(내가 새라면) 저 하늘을 날 수 있었을 텐데... - 이 코드는 실제로 사용이 가능한 문법이다."
            ],
            "answers": [
                "for문의 선언식, 조건식, 증감식은 모두 생략하여 while문처럼 사용할 수 있습니다.",
                "while문의 조건부 탈출을 위해 보통 break문을 사용합니다.",
                "else if문은 else문 사용 전이라면 제한없이 사용할 수 있습니다.",
                "else문은 if문 없이 독립적으로 사용할 수 없습니다. ",
                "else if문은 또한 else문처럼 if문이 없으면 사용할 수 없습니다.",
                "당연히 문법상 사용할 수 없는 코드입니다. 하지만 의미는 알겠네요."
            ],
            "boolAnswers": [
                true,
                true,
                false,
                false,
                true,
                false
            ]
        },
        {
            "quizName": "배열과 포인터",
            "questions": [
                "포인터 변수 값의 0과 NULL은 서로 다른 의미이다.",
                "포인터 변수의 공간 크기는 어느 환경에서나 똑같다.",
                "널 포인터는 아무 것도 가리키지 않는다는 것을 의미한다.",
                "포인터 변수는 값을 저장하기 위한 변수이다.",
                "배열은 선언과 동시에 초기화를 하지 않으면 쓰레기 값이 들어간다.",
                "char arrStr[5];은 문법상 선언이 가능한 코드이다."
            ],
            "answers": [
                "포인터 변수에 있어 0, NULL은 둘다 아무것도 가리키지 않는다는 의미입니다.",
                "포인터 변수의 공간 크기는 하드웨어나 운영체제에 따라 달라집니다.",
                "널 포인터는 포인터가 아무 것도 가리키지 않는다는 뜻입니다.",
                "포인터 변수는 메모리의 주소를 저장하기 위한 특이한 변수입니다.",
                "배열도 선언 후 초기화하지 않으면 쓰레기 값이 들어갑니다.",
                "char arrStr[5];는 문법상 사용이 가능한 코드입니다. 문자형 자료를 5개나 담는 배열을 선언하죠."
            ],
            "boolAnswers": [
                false,
                false,
                true,
                false,
                true,
                true
            ]
        }
    ],
    "lectureSets": [
        {
            "texts": [
                "(해당 강의를 스킵하면 추가 점수를 받을 수 없습니다.)",
                "으음... 안녕한가요? 정균락이라고 해요.",
                "오늘은 C언어의 역사와 간단한 자료형에 대해서 알아볼게요.",
                "C언어는 1970년대 유닉스 운영체제에서 사용하기 위해 만든 건데,",
                "절차 지향적인 프로그래밍 언어에요.",
                "절차 지향이라고 하면 알아들을 지 모르겠어요.",
                "말 그대로에요.",
                "흠... 프로그램은 프로그래머가 작성한 순서대로 진행되는 게 절차 지향이에요.",
                "어렵지 않죠.",
                "어렵지 않을 거라 생각하고.",
                "C언어 자료형의 종류는 int(정수), double(실수), char(문자) 등이 있어요.",
                "우리가 쓰는 언어랑 같죠.",
                "<, >, ==(같은가?), !=(다른가?) 등을 관계 연산자라고 하는데,",
                "이 관계 연산자는 조건을 만족하면 1을 반환하고 만족하지 않으면 0을 반환해요.",
                "여기서 특이한 거는요.",
                "또한 C언어에서는 0이 아닌 모든 값을 true로 본다는 거에요.",
                "이게 무슨 말인 지 좀 알쏭달쏭하죠.",
                "말 그대로 누가 이게 맞냐 틀리냐 질문했는데 거기에 -1을 던져도 true로 본다는 거에요.",
                "좀 바보 같을 수 있는데, 어쩔 수 없어요.",
                "오늘 수업 첫 수업이기도 하고, 여기까지 할게요."
            ]
        },
        {
            "texts": [
                "(해당 강의를 스킵하면 추가 점수를 받을 수 없습니다.)",
                "으음... 안녕한가요? 정균락이라고 해요.",
                "두 번째 시간이죠.",
                "오늘은 변수와 함수에 대해서 할 거에요.",
                "프로그래밍에 좀 친숙한 사람이면, 금방 따라올 거에요.",
                "변수...가 뭐냐면,",
                "값을 저장할 수 있는 메모리 공간이에요.",
                "거기에 별명...같은 걸 붙인 거죠.",
                "int num; 하고 선언하면 num이 변수명이겠죠.",
                "변수를 선언하고 초기화(값을 넣어주는 것)를 하지 않으면 쓰레기 값(이상한 값)이 들어가기 때문에,",
                "보통 선언하면 초기화를 한번 진행해야해요.",
                "어렵지 않죠.",
                "어렵지 않을 거라 생각하고.",
                "상..수는 말 그대로 상수고요, 한번 설정하면 변하지 않는 수에요.",
                "const int 라고 하면 정수 상수죠.",
                "알겠죠? 한번 직접 찾아보는 게 빠르겠어요.",
                "그럼 변수에 대해서는 여기까지 알아보고, 함수에 대해서 배워볼게요.",
                "C언어에서는 main()에서 시작해 main()에서 끝나게 되는데, 이 main()도 하나의 함수에요",
                "프로그램 하나 당 하나의 main함수만 존재할 수 있어요.",
                "뭐 이것도 쉽죠.",
                "함수의 변수의 선언 시에 함수 이름은 대문자, 변수 이름은 소문자로 보통 쓰고",
                "변수 앞에 자료형 쓰는 거 잊으면 안되죠.",
                "고생했어요. 오늘 수업은 여기까지고 시험 잘 봐요."
            ]
        },
        {
            "texts": [
                "(해당 강의를 스킵하면 추가 점수를 받을 수 없습니다.)",
                "으음... 안녕한가요? 정균락이라고 해요.",
                "시험 어려웠어요?",
                "허허, 뭐가요, 쉬웠는데 성적이 왜 그랬어요.",
                "아무튼 오늘은 반복문과 조건문에 대해서 할 거에요.",
                "반복문은 for문, while문 등이 있어요.",
                "둘다 ~~하는 동안 이라는 뜻이죠.",
                "어느 조건 동안 돌라는 거에요.",
                "계속 돌면 안되니깐. 아무튼,",
                "for(선언식;조건식;증감식)으로 구성돼요",
                "잘 모르겠죠, 몰라도 돼요.",
                "보통 for(int i=0; i<4; i++)... 뭐 이렇게 쓰는데",
                "아무튼 for( ; ; )로 쓰면 계속 돌아요.",
                "while(true)랑 같은데,",
                "while문은 while(조건)으로 조건이 true이면 계속 실행하는 반복문이에요.",
                "허허, 어렵나요?",
                "아무튼, 루프에서 탈출하고 싶으면 break라는 키워드를 써서 탈출할 수 있어요.",
                "그렇다면 조건문에 대해서 조금 알아볼게요",
                "조건문은 if문, else문, switch문같이 여러 개가 있어요.",
                "if(num==0) i++; 는 만약 num이 0이면 i에 1을 더해라. ",
                "else if(num==1) i++; 는 만약 if가 틀렸고 num이 1이면 i에 1을 더해라.",
                "else는 위에 것이 다 틀렸으면 뭔가를 해라. 에요.",
                "이 else if문은 몇 개이던지 추가가 가능해요",
                "오늘 수업은 여기까지에요.",
                "모두 수고 많았어요."
            ]
        },
        {
            "texts": [
                "(해당 강의를 스킵하면 추가 점수를 받을 수 없습니다.)",
                "으음... 안녕한가요? 정균락이라고 해요.",
                "마지막 시간이죠.",
                "모두 고생 많았어요.",
                "오늘은 배열과 포인터에 대해서 배워볼 거에요.",
                "조금 어려울 수도 있겠어요.",
                "한번 해보죠.",
                "포인터 변수란 메모리의 주소 값을 저장하기 위한 변수에요.",
                "특이한 변수죠. 주소를 저장하려고 쓰는 변수에요.",
                "포인터 변수의 크기는 하드웨어와 운영체제에 따라 달라져요.",
                "자세한 건 다른 과목을 듣다보면 알게 되겠지만.",
                "뭐 아무튼 컴퓨터마다 다를 수도 있다는 거에요.",
                "포인터 변수는 * 으로 선언이 가능한데, 자료형과 변수 사이에 *를 붙이면 포인터변수가 돼요.",
                "int* ptr; 처럼요.",
                "포인터 변수가 0 또는 NULL을 가리키면 널 포인터에요.",
                "아무것도 안 가리킨다는 거죠.",
                "뭐... 알겠죠.",
                "몰라도 돼요.",
                "시험에서 틀리면 돼죠 뭐.",
                "배열은 저거보단 쉬워요.",
                "int arr[5] = { 1,2,3,4,5 }; 처럼 선언하고 이는 길이가 5인 int형 배열을 선언한다는 뜻이에요.",
                "각각 요소가 1 2 3 4 5라는 거죠.",
                "즉, arr[2]에는 3이라는 값이 들어가 있는거에요.",
                "좋아 수업은 여기까지이고 시험 잘 보고 나중에 볼 수 있음 봐요.",
                "고생했어요."
            ]
        }
    ],
    "examSets": [
        {
            "examName": "C 언어 역사와 자료형, 변수와 함수",
            "questions": [
                "C 언어 자료형의 종류가 아닌 것은?",
                "다음 중 함수가 아닌 것은?",
                "다음 중 관계 연산자가 아닌 것은?",
                "다음 자료형 중에 알맞게 이어지지 않은 것은?",
                "다음 중 상수와 가장 관련이 깊은 것은?",
                "다음 중 C 언어에서 true로 인식되지 않는 것은?"
            ],
            "exampleSets": [
                {
                    "examples": [
                        "power",
                        "double",
                        "char",
                        "int"
                    ],
                    "answerExample": "char, int, double은 자료형이 맞습니다."
                },
                {
                    "examples": [
                        "void Add_Num();",
                        "int num;",
                        "int Create();",
                        "int Get_Num(int num);"
                    ],
                    "answerExample": "함수가 맞으며, 함수가 아닌 것은 int num;으로 변수입니다. "
                },
                {
                    "examples": [
                        ">",
                        "==",
                        "&",
                        "!="
                    ],
                    "answerExample": ">, ==, != 은 관계 연산자가 맞으며, &는 비트 연산자입니다."
                },
                {
                    "examples": [
                        "char - 문자",
                        "dark - 인생",
                        "int - 정수",
                        "double - 실수"
                    ],
                    "answerExample": "char(문자), int(정수), double(실수)가 맞으며, dark는 자료형이 아닙니다."
                },
                {
                    "examples": [
                        "const",
                        "static",
                        "public",
                        "string"
                    ],
                    "answerExample": "심볼릭 상수의 올바른 선언은 const int NUM = 10;이 맞습니다. (선언과 동시에 초기화)"
                },
                {
                    "examples": [
                        "1",
                        "-1",
                        "5",
                        "0"
                    ],
                    "answerExample": "C언어는 0을 제외한 모든 값을 true로 간주합니다."
                }
            ],
            "answers": [
                0,
                1,
                2,
                1,
                3,
                3
            ]
        },
        {
            "examName": "C언어의 조건문과 반복문, 배열과 포인터",
            "questions": [
                "다음 중 조건문이 아닌 것은?",
                "다음 중 포인터를 뜻하는 기호는?",
                "다음 중 반복문으로 사용할 수 없는 구문은?",
                "다음 중 배열의 index 3에 저장된 값이 3인 것은?",
                "다음 중 쓰레기 값이 저장된 변수는?",
                "int arr[5] = { 0,1,2,3,4 }; 다음 코드를 작성했을 때 잘못된 것은?"
            ],
            "exampleSets": [
                {
                    "examples": [
                        "else문",
                        "if문",
                        "while문",
                        "switch문"
                    ],
                    "answerExample": "if문, else if문, else문, switch문 등은 조건문이며 while문은 반복문입니다."
                },
                {
                    "examples": [
                        "*",
                        "~",
                        "!",
                        "#"
                    ],
                    "answerExample": "포인터를 뜻하는 기호는 * 입니다."
                },
                {
                    "examples": [
                        "for(int i = 0; i < 10; i++)",
                        "Shake it(Oh Shake it)",
                        "while(num < 10)",
                        "for( ; ; i++)"
                    ],
                    "answerExample": "Shake it()은 없는 반복문 조건부입니다."
                },
                {
                    "examples": [
                        "int arr[5] = { 1,2,3,4,5 };",
                        "int arr[5] = { 2,3,4,5,6 };",
                        "int arr[5] = { 0,1,2,3,4 };",
                        "int arr[5] = { 4,3,2,1,0 };"
                    ],
                    "answerExample": "index가 3임은 곧 4번째 요소가 가리키므로 답은 3번입니다."
                },
                {
                    "examples": [
                        "int num = 1;",
                        "double num = 1.3;",
                        "int num;",
                        "int num = 0;"
                    ],
                    "answerExample": "변수는 항시 초기화하여 쓰레기 값이 들어가는 것을 막아야 합니다."
                },
                {
                    "examples": [
                        "arr[0] : 0이 저장되어 있다.",
                        "arr[1] : 1이 저장되어 있다.",
                        "arr[2] : 2이 저장되어 있다.",
                        "arr[5] : 4이 저장되어 있다."
                    ],
                    "answerExample": "arr[5]는 할당되지 않은 공간입니다."
                }
            ],
            "answers": [
                2,
                0,
                1,
                2,
                2,
                3
            ]
        }
    ]
}