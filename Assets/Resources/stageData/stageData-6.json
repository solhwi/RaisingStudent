{
  "stageOrder": [
    0,
    2,
    4,
    1,
    6,
    3,
    0,
    2,
    4,
    1,
    6,
    3,
    5,
    0,
    2,
    4,
    1,
    6,
    3,
    0,
    2,
    4,
    1,
    6,
    3,
    5
  ],
  "quizSets": [
    {
      "quizName": "데이터들의 모임, 데이터베이스(DB) 설계",
      "questions": [
        "데이터베이스(DB)는 사람이 필요로 하는 의미있는 데이터들의 집합이다.",
        "DB의 설계 순서는 '요구 분석' - '개념 설계' - '논리 설계' - '물리 설계' 이다.",
        "DB 설계 시 고려사항은 무결성, 일관성, 박지성 등이 있다.",
        "개체(Entity)란 DB에서 표현하려는 정보로, 무형의 정보만을 말한다.",
        "속성(Attribute)이란, DB의 기본 단위이며, 개체의 특성을 말한다.",
        "DB와 DBMS는 같은 말이다."
      ],
      "answers": [
        "데이터베이스는 필요한 데이터들의 집합입니다.",
        "설계순서는 기억해둡시다! 요구조건, 개념, 논리, 물리. 설계가 끝나면 구현을 하면 됩니다!",
        "고려사항으로는 무결성, 일관성, 회복, 보안, 효율성 등이 있습니다. 박지성은 아닙니다.",
        "유, 무형의 정보 모두 개체가 될 수 있습니다.",
        "개체는 서로 연관된 몇 개의 속성(= 특성)으로 이루어집니다.",
        "DBMS는 DataBase Management System의 약자로 DB를 관리하는 프로그램을 뜻합니다."
      ],
      "boolAnswers": [
        true,
        true,
        false,
        false,
        true,
        false
      ]
    },
    {
      "quizName": "데이터베이스(DB)도 종류가 있다! 관계형 데이터베이스란?",
      "questions": [
        "데이터베이스(DB)는 관계형 데이터베이스(RDB)와 NoSQL로 나눌 수 있다.",
        "관계형 데이터베이스는 모든 데이터를 3차원의 테이블 형태로 표현하는 데이터베이스다.",
        "테이블은 하이와 로우로 이루어져있다.",
        "RDB에서 관계는 1대1, 1대다, 17대1이 있다.",
        "RDB에서의 키(KEY)는 놀랍게도 자물쇠를 열 수 있는 실제 쇠붙이를 뜻한다.",
        "외래키는 다른 릴레이션의 기본 키를 참조하는 속성을 뜻한다."
      ],
      "answers": [
        "데이터베이스는 크게 2개의 종류로 나눌 수 있습니다. 관계형 데이터베이스(RDB)와 NoSQL(Not Only SQL)!",
        "관계형 데이터베이스는 2차원의 테이블 형태로 데이터를 표현합니다.",
        "RDB에서 테이블은 칼럼(column)과 로우(row)로 이루어져있습니다.",
        "RDB에서 관계는 1대1, 1대다, 다대다 관계가 있습니다.",
        "RDB의 키(KEY)는 데이터의 구분 기준이 되는 속성을 뜻합니다.",
        "키 중에 외래키는 단어 뜻처럼 다른 테이블에서 참조해온 속성을 뜻합니다."
      ],
      "boolAnswers": [
        true,
        false,
        false,
        false,
        false,
        true
      ]
    },
    {
      "quizName": "한꺼번에 수행되어야 할 일련의 연산, 트랜잭션!",
      "questions": [
        "데이터베이스의 상태를 변환시키는 것을 트랜잭션이라고한다.",
        "트랜잭션의 특성은 원자성, 일관성, 독립성, 안시성이 있다.",
        "원자성이란 '트랜잭션의 연산은 반영되거나 안되거나 둘 중 하나만 가능하다.'는 특성이다. ",
        "CRUD는 Cute, Read, Update, Delete의 약자이다.",
        "CRUD를 분석하면 데이터의 양을 유추할 수 없다.",
        "트랜잭션의 특성들은 데이터의 무결성을 보장하기 위해서 존재하는데 무결성이란 결정을 못하는 특성이다."
      ],
      "answers": [
        "데이터베이스의 상태를 변환시키는 것을 트랜잭션이라고 합니다.",
        "트랜잭션의 특성은 원자성(Atomicity), 일관성(Consistency), 독립성(Isolation), 영속성(Durability)가 있습니다. 안시성은 고구려의 성 이름이죠.",
        "원자성이란, 트랜잭션 내의 모든 명령은 수행되어야하며, 오류 발생 시 해당 트랜잭션이 모두 반영되면 안된다는 특성입니다.",
        "CRUD는 테이블의 변화를 주는 CREATE, READ, UPDATE, DELETE 연산에 앞글자를 딴 용어입니다.",
        "CRUD가 테이블의 변화를 주는 연산들이니까 이걸 분석하면 데이터의 양을 유추할 수 있겠죠!",
        "데이터의 무결성이란, 데이터의 정확성과 일관성을 유지하고 보증하는 것을 뜻합니다."
      ],
      "boolAnswers": [
        true,
        false,
        true,
        false,
        false,
        false
      ]
    },
    {
      "quizName": "데이터베이스들의 언어, SQL!",
      "questions": [
        "SQL은 국제 표준 데이터베이스 언어이다.",
        "SQL은 DDL, DML, DCL로 이루어져있다.",
        "SQL에서 CREATE는 삭제하는 명령어이다.",
        "SQL로 데이터베이스 사용자에게 권한을 부여, 혹은 취소할 수 없다.",
        "조건에 맞는 데이터를 찾는 명령어는 FIND이다.",
        "DDL은 Data Data Language의 약자이다."
      ],
      "answers": [
        "SQL(Structured Query Language)는 DBMS의 데이터를 관리하기 위해서 설계된 국제 표준 데이터베이스 언어입니다.",
        "SQL은 DDL(데이터 정의어), DML(데이터 조작어), DCL(데이터 제어어)로 크게 3가지로 분류할 수 있습니다.",
        "DDL(데이터 정의어) 명령어인 CREATE는 스키마나 도메인, 테이블, 뷰 등을 정의하는 명령어 입니다.",
        "DCL(데이터 제어어)인 GRANT와 REVOKE 명령어를 통해서 데이터베이스 사용자에게 권한을 각각 부여, 취소할 수 있습니다.",
        "조건에 맞는 데이터를 찾는 명령어는 DML(데이터 조작어)에 하나인 SELECT문입니다.",
        "DDL은 데이터 정의어, 즉 Data Define Language의 약어입니다."
      ],
      "boolAnswers": [
        true,
        true,
        false,
        false,
        false,
        false
      ]
    }
  ],
  "lectureSet": [
    {
      "texts": [
        "(해당 강의를 스킵하면 추가 점수를 받을 수 없습니다.)",
        "...난 표창우라고 헌다.",
        "반가워.",
        "음.. 이거 데이터베이스인 건 알고 들어왔지?",
        "...그래 잘해보자.",
        "나도 F를 주고 싶어서 주는 게 아니라,",
        "너무 못하는 데 성적을 줄 순 없잖아.",
        "어떻게 생각해 학생.",
        "...그건 아니라고?",
        "네 성적도 뻔하다 이 놈아",
        "그.. 데이터베이스 들어라도 본 사람 있어?",
        "...수업이나 허자...",
        "아무튼 데이터베이스가 뭐냐면,",
        "여러 사람이 쓰고 싶은 정보를 체계화해서 통합, 관리하는 데이터의 집합이다.",
        "앞에 넌 좀 적어라...",
        "아무튼 설계하는 데도 순서가 있는데,",
        "요구 분석 - 개념 설계 - 논리 설계 - 물리 설계 - 구현이 순서야.",
        "당연히 무결성, 일관성, 회복, 보안, 효율성 같은 거 고려해야 돼.",
        "초등학생도 이해할 수 있게 설명하면,",
        "그니까 해킹 안 당하게, 안 겹치게, 터지면 복구할 수 있게 설계하라는 거야.",
        "알겠냐?",
        "데이터베이스에 표현하려는 데이터를 '개체(Entity)'라고 하는데.",
        "유형이든 무형이든 표현이 가능한 데이터는 모두 개체가 될 수 있어.",
        "그리고 그 개체의 특성을 '속성(Attribute)'이라고 한다.",
        "이 속성은 데이터베이스에서 개체를 구별할 수 있는 기준이 될 수 있지.",
        "...",
        "너는 이름이 뭐냐?",
        "박지성? 허허 유명한 이름이네.",
        "데이터베이스에 네 이름을 넣으면 박지성이란 개체로 저장되는거지.",
        "속성으로는 학생, 4학년, 컴퓨터 공학과가 되겠군.",
        "데이터베이스를 편하게 관리하기 위해서 만든 시스템을 DBMS라고 한다.",
        "DataBase Management System, 데이터베이스 관리 시스템이야.",
        "오늘은 첫시간이니 수업 여기까지 하자.",
        "아유.. 뭐 한 것도 없는데 표정들이 왜 그래? 쯧쯔",
        "공부 좀 하자."
      ]
    },
    {
      "texts": [
        "(해당 강의를 스킵하면 추가 점수를 받을 수 없습니다.)",
        "...창우다.",
        "오늘은 데이터베이스(DB)의 종류에 대해서 배워보자.",
        "데이터베이스는 크게 2가지로 분류할 수 있어.",
        "첫번째로 Realational DataBase(관계형 데이터베이스), 줄여서 RDB와 ",
        "Not only SQL인 NoSQL로 나눠진다.",
        "여기서 SQL은 나중에 배우겠지만 데이터베이스 관리라는 특수 목적으로 제작된 언어다.",
        "우린 RDB를 알아볼텐데, RDB에서는 2차원 표를 가지고 데이터들을 표현한다.",
        "테이블이라고도 해.",
        "테이블이 뭐나면 어.. 테이블...",
        "행이랑 열로 되어있는 표니까 2차원 표지. 모르겠다고?",
        "하.. 허 나원참..",
        "이 테이블은 로우(행)와 칼럼(열)로 이루어져 있는데,",
        "특히 '열'은 속성, 개체의 속성들이 들어가. 개체를 구분하는 기준이 될 수도 있지.",
        "'행' 하나는 개체 하나하나를 나타내는 거고.",
        "이런 '행'의 데이터들을 구분하는 기준을 키(KEY)라고 한다.",
        "그래그래 너네 집 키랑 다른 거야.",
        "집을 서로 구분할 수 있잖아 그 키로도...",
        "이해만 했으면 됐지. 그래그래...",
        "키도 여러 종류가 있는데 대표적으로 몇 개만 알고 가자.",
        "다른 테이블에서 참조해서 가져온 키인 외래키(Foreign Key)와",
        "그 테이블을 구분할 수 있는 기준 키는 후보키(Candidate Key)가 있다.",
        "이 후보키들 중에서 테이블 당 하나씩 제일 기준이 될 기본 키(Primary Key)를 정할 수 있어.",
        "이러한 데이터들 사이에는 관계가 있을 수도 있는데 1대1, 1대다, 다대다 관계가 있어.",
        "학생과 수업 사이에 관계를 생각해보면 편해.",
        "너넨 여러 수업을 들을 수 있고, 수업 입장에서도 여러 학생들이 수강할 수 있으니 다대다 관계인거야. ",
        "......",
        "...",
        "그래, 여기까지 하자.",
        "집에 조심히 가라.",
        "시험 잘 봐보고."
      ]
    },
    {
      "texts": [
        "(해당 강의를 스킵하면 추가 점수를 받을 수 없습니다.)",
        "그래 안녕하다. 표창우다.",
        "너 지난 시간에 배운 RDB 기억하니?",
        "잊었다고? 하이고",
        "그... 공부에 욕심이 없나?",
        "오늘은 트랜잭션이야.",
        "데이터베이스의 상태를 변환하는 하나의 명령 단위를 트랜잭션이라고한다.",
        "대표적으로 CRUD(Create, Read, Update, Delete)들이 있다. ",
        "이 놈들을 분석하게 되면 데이터의 양을 유추할 수 있다.",
        "create 한번에 데이터 하나 추가",
        "read 한번에 데이터 변화 없음",
        "뭐 이런 식으로.",
        "이런 트랜잭션들은 데이터의 무결성을 보장하기 위해서 몇 가지 특성을 갖는데,",
        "무결성은 데이터의 정확성과 일관성을 유지, 보증하는 성질이야.",
        "이게 없으면 사람들이 신뢰를 어떻게 해 이 정보를",
        "그치?",
        "특성은 원자성(Atomicity), 일관성(Consistency), 독립성(Isolation), 영속성(Durability)이 있는데 앞글자를 따서 ACID라고 부른다.",
        "원자성은 트랜잭션의 연산이 성공하면 모두 반영돼야하고, 실패 시 해당 연산은 모두 반영되지 않는다는 특성이다.",
        "은행에서 돈을 보내는데, 실패하면 원래 상태로 되돌리고,",
        "성공하면 돈 연산을 무조건 마무리가 돼야 하니까.",
        "중간에 애매하게 걸치면 큰일나는 거야.",
        "일관성은... 하지 말자 시험에 안 낼게 그래.",
        "집에 얼른 가 딴짓하지 말고."
      ]
    },
    {
      "texts": [
        "(해당 강의를 스킵하면 추가 점수를 받을 수 없습니다.)",
        "벌써 마지막 시간이군. 복습 좀 했냐?",
        "그래... 그래...",
        "오늘은 저번에 한번 언급했던 SQL에 대해서 알아보지.",
        "SQL(Structured Query Language)는 DBMS의 데이터들을 관리하려고 만든 데이터베이스 국제 표준 언어다.",
        "실제로 많은 RDBMS 프로그램들이 SQL을 사용해.",
        "SQL은 DDL, DML, DCL로 3가지로 나눌 수 있어.",
        "DDL(Data Defiine Language)은 '데이터 정의어'인데, 데이터베이스 자체나 테이블을 정의, 변경, 삭제할 때 사용하는 언어다.",
        "명령어로 테이블 만들 때 CREATE, 변경할 때 ALTER, 삭제할 때 DROP 같은 게 있어.",
        "DDL, DML, DCL 세 개 까먹지마. 두 번째 꺼 한다..?",
        "DML(Data Multipulation Language)은 '데이터 조작어', 이건 저장된 데이터를 가공하는데 사용되는 언어야.",
        "명령어로 (테이블에서) 데이터 검색할 때 SELECT, 삽입할 때 INSERT, 삭제할 때 DELETE, 변경할 때 UPDATE 이렇게 4개 있다.",
        "이름 그대로니까 어렵진 않을걸?",
        "마지막으로 DCL(Data Control Language)는 '데이터 제어어'인데, 관리자가 사용하는 언어야.",
        "...넘어가자 이건.",
        "머리 속으로 그림을 그려가며 이해하는 게 빨라.",
        "그래 시험 잘 보자.",
        "알려준 거에서 내니까 잘 볼 수 있겠지. 생각보단 쉽게 냈어.",
        "잘 좀 보자.",
        "그래, 다음에 또 보자."
      ]
    }
  ],
  "examSet": [
    {
      "examName": "DB와 그 종류",
      "questions": [
        "DB의 설계순서가 아닌 것은?",
        "DB 설계 시 고려사항이 아닌 것은?",
        "관계형 데이터베이스의 약자인 RDB에 'R'에 해당하는 단어는?",
        "RDB에서 개체 간의 관계가 아닌 것은?",
        "관계형 데이터베이스는 데이터를 몇차원의 테이블로 데이터를 표현하는가?",
        "키(KEY)가 아닌 것은?"
      ],
      "exampleSets": [
        {
          "examples": [
            "요구 분석",
            "상상",
            "물리 설계",
            "개념 설계"
          ],
          "answerExample": "상상은 자유입니다!"
        },
        {
          "examples": [
            "무결성",
            "일관성",
            "회복",
            "모래성"
          ],
          "answerExample": "모래성처럼 쉽게 무너지는 데이터베이스를 설계해선 안되겠죠?"
        },
        {
          "examples": [
            "Reality",
            "Relax",
            "Remind",
            "Relational"
          ],
          "answerExample": "'Relational'은 영어로 '관계적인' 이라는 뜻입니다."
        },
        {
          "examples": [
            "1대1",
            "17대1",
            "1대다",
            "다대다"
          ],
          "answerExample": "17대1 관계도 있겠지만... 이것도 1대다의 범주에 들어가겠네요."
        },
        {
          "examples": [
            "0차원",
            "1차원",
            "2차원",
            "3차원"
          ],
          "answerExample": "테이블의 형태는 2차원입니다. (엑셀을 생각하면 편하겠네요.)"
        },
        {
          "examples": [
            "외래키",
            "후보키",
            "기본키",
            "집키"
          ],
          "answerExample": "집 키도... 중요하죠!"
        }
      ],
      "answers": [
        1,
        3,
        3,
        1,
        2,
        3
      ]
    },
    {
      "examName": "트랜잭션과 SQL",
      "questions": [
        "대표적인 트랜잭션인 CRUD에 해당하는 단어가 아닌 것은?",
        "데이터 무결성의 뜻으로 올바른 것은?",
        "트랜잭션의 특성으로 올바르지 않은 것은?",
        "SQL의 종류로 틀린 것은?",
        "데이터를 삽입할 때 쓰는 명령어는?",
        "DCL(데이터 제어어)의 명령어가 아닌 것은?"
      ],
      "exampleSets": [
        {
          "examples": [
            "Cute",
            "Read",
            "Update",
            "Delete"
          ],
          "answerExample": "Cute...를 고르신 당신! 귀엽네요."
        },
        {
          "examples": [
            "깨끗한 것",
            "맑은 것",
            "자신있는 것",
            "데이터의 정확성과 일관성을 유지하고 보증하는 것"
          ],
          "answerExample": "깨끗하게! 맑게! 자신있게! 클린 앤 클리어!"
        },
        {
          "examples": [
            "원자성(Atomicity)",
            "일관성(Consistency)",
            "독립성(Isolation)",
            "모래성(Sand Castle)"
          ],
          "answerExample": "모래성처럼 쉽게 무너지는 데이터베이스를 설계해선 안되겠죠?"
        },
        {
          "examples": [
            "ADHD",
            "DDL",
            "DML",
            "DCL"
          ],
          "answerExample": "ADHD는..."
        },
        {
          "examples": [
            "DELETE",
            "ALTER",
            "INSERT",
            "DROP"
          ],
          "answerExample": "이름 그대로 INSERT가 삽입 명령어를 담당하고 있습니다."
        },
        {
          "examples": [
            "COMMIT",
            "GROOT",
            "GRANT",
            "REVOKE"
          ],
          "answerExample": "I.. AM.. GROOT..."
        }
      ],
      "answers": [
        0,
        3,
        3,
        0,
        2,
        1
      ]
    }
  ]
}